From d676f35ab086072172f724a64c7972e235691380 Mon Sep 17 00:00:00 2001
From: Peter Jung <admin@ptr1337.dev>
Date: Mon, 22 Jan 2024 14:59:12 +0100
Subject: [PATCH 06/25] Cachy: Add extra GCC optimization flags

Enable 2 extra optimimization flags:
  -fivopts
     Perform induction variable optimizations (strength reduction,
     induction variable merging and induction variable elimination)
     on trees.
  -fmodulo-sched
     Perform swing modulo scheduling immediately before the first
     scheduling pass. This pass looks at innermost loops and reorders
     their instructions by overlapping different iterations.

stress-ng microbenchmark improvements (average from 10 x 1min runs) on
Alderlake with gcc 13.2.0:
  af-alg:  1.0% (kernel AF_ALG crypto)
  pipe:    1.5% (pipe + context switch)
  fork:    4.4% (process fork/exit)
  mmap:    3.0% (memory mapping)
  switch:  4.9%	(context switching)

KVM QEMU bootspeed improvements (based on average of 100 boots): 0.5%

Signed-off-by: Peter Jung <admin@ptr1337.dev>
---
 Makefile | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/Makefile b/Makefile
index 89f496a8a..56c5725de 100644
--- a/Makefile
+++ b/Makefile
@@ -1149,9 +1149,9 @@ KBUILD_CFLAGS	+= -fno-strict-overflow
 # Make sure -fstack-check isn't enabled (like gentoo apparently did)
 KBUILD_CFLAGS  += -fno-stack-check
 
-# conserve stack if available
+# conserve stack, ivopts and modulo-sched if available
 ifdef CONFIG_CC_IS_GCC
-KBUILD_CFLAGS   += -fconserve-stack
+KBUILD_CFLAGS   += -fconserve-stack -fivopts -fmodulo-sched
 endif
 
 # change __FILE__ to the relative path from the srctree
-- 
2.43.0.232.ge79552d197

